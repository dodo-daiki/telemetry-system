version: "3.9"

services:
  duckdns:
    build: ./duckdns
    container_name: duckdns-updater
    restart: always
    environment:
      - DOMAIN=${DUCKDNS_DOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}

  backend:
    build: ./backend
    container_name: telemetry-backend
    ports:        # 外部公開 → 内部
      - "8000:8000"
    volumes:      # 開発中ホットリロードしたい場合
      - ./backend/app:/app/app
      - ./backend/telemetry.db:/app/telemetry.db
    networks:
      - telemetry-net

  frontend:
    container_name: "telemetry-frontend"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    command: npm run dev
    environment:
      - NODE_ENV=development
    networks:
      - telemetry-net


  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    depends_on:
      - backend
      - frontend 
    networks:
      - telemetry-net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --agree-tos --no-eff-email --email dodo0505daiki@gmail.com -d telemetry-system.duckdns.org

networks:
  telemetry-net:
    driver: bridge
